---
import 'hotkeypad/reset.css'
import 'hotkeypad/index.css'
import { type SocialIcon } from '@/types'
import { basics } from '@cv'
import { Icon } from 'astro-icon/components'

const { profiles } = basics

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg width="16" height="16" viewBox="0 0 24 24"><title>GitHub</title><path fill="currentColor" d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"></path></svg>
`,
  LinkedIn: `
<svg fill="currentColor" height="16" width="16" viewBox="0 0 24 24" xml:space="preserve" stroke="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g id="social-linkedin"> <path d="M22.2,0H1.8C0.8,0,0,0.8,0,1.8v20.5c0,1,0.8,1.8,1.8,1.8h20.5c1,0,1.8-0.8,1.8-1.8V1.8C24,0.8,23.2,0,22.2,0z M7.2,20.4 H3.5V9h3.6V20.4z M5.3,7.4c-1.1,0-2.1-0.9-2.1-2.1s0.9-2.1,2.1-2.1s2.1,0.9,2.1,2.1S6.5,7.4,5.3,7.4z M20.5,20.5h-3.6v-6.3 c0-1.8-0.8-2.4-1.8-2.4c-1.1,0-2.1,0.8-2.1,2.5v6.2H9.3V9h3.5v1.6h0c0.3-0.7,1.6-1.9,3.4-1.9c2,0,4.2,1.2,4.2,4.7V20.5z"></path> </g> </g></svg>
`,
	  "X / Twitter": `
<svg fill="currentColor" stroke="currentColor" height="16" stroke-width="0" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"></path></svg
> `,
}

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network]
  const firstLetter = network[0].toUpperCase()

  return {
    id: network,
    section: 'Social',
    title: `Visita mi ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  }
})
---

<footer id='normal-footer' class='print:hidden flex flex-col gap-2'>
  <div class="text-skin-base">
    Presiona <kbd>Cmd</kbd> + <kbd>K</kbd> para abrir el comando de paleta de colores.
  </div>
</footer>
<div class='footer-button print:hidden'>
  <Icon name='ri:command-fill' width={20} height={20} class="text-skin-hue"/>
</div>

<div
  id='hotkeypad'
  data-placeholder='Comandos y Atajos'
  data-info={JSON.stringify(profilesInfo)}>
</div>

<script>
  interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
    handler?: () => void
  }

  import HotKeyPad from 'hotkeypad'
  import { basics } from '@cv'

  const hotkeypad = new HotKeyPad()
  const info = hotkeypad.instance.getAttribute('data-info') ?? '[]'
  const parsedInfo = JSON.parse(info) as Info[]
  const { email } = basics

  const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }) => {
    return {
      id,
      title,
      icon,
      hotkey,
      section,
      handler: () => {
        window.open(url, '_blank')
      },
    }
  })
  hotkeypad.setCommands([
    {
      id: 'theme',
      title: 'Alternar modo claro/oscuro',
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12 21.9967C6.47715 21.9967 2 17.5196 2 11.9967C2 6.47386 6.47715 1.9967 12 1.9967C17.5228 1.9967 22 6.47386 22 11.9967C22 17.5196 17.5228 21.9967 12 21.9967ZM12 19.9967C16.4183 19.9967 20 16.415 20 11.9967C20 7.57843 16.4183 3.9967 12 3.9967C7.58172 3.9967 4 7.57843 4 11.9967C4 16.415 7.58172 19.9967 12 19.9967ZM7.00035 15.316C9.07995 15.1646 11.117 14.2939 12.7071 12.7038C14.2972 11.1137 15.1679 9.07666 15.3193 6.99706C15.6454 7.21408 15.955 7.46642 16.2426 7.75406C18.5858 10.0972 18.5858 13.8962 16.2426 16.2393C13.8995 18.5825 10.1005 18.5825 7.75736 16.2393C7.46971 15.9517 7.21738 15.6421 7.00035 15.316Z"></path></svg>`,
      hotkey: 'ctrl+O',
      section: 'Actions',
      handler: () => {
        const button = document.getElementById('themeSwitch')
        button?.click()
      },
    },
    {
      id: 'print',
      title: 'Descargar CV',
      icon: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="7 10 12 15 17 10"/><line x1="12" y1="15" x2="12" y2="3"/></svg>`,
      hotkey: 'ctrl+D',
      section: 'Actions',
      handler: () => {
        const cvUrl = '/CV.pdf' // Aseg√∫rate de tener el CV en la carpeta public
        const link = document.createElement('a')
        link.href = cvUrl
        link.download = 'Analista de Datos - Alejandro Lezana.pdf' // Nombre del archivo al descargar
        document.body.appendChild(link)
        link.click()
        document.body.removeChild(link)
      },
    },
    {
      id: 'contact',
      title: 'Contactame',
      icon: `<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12.04 2C6.58 2 2.13 6.45 2.13 11.91C2.13 13.66 2.59 15.36 3.45 16.86L2.05 22L7.3 20.62C8.75 21.41 10.38 21.83 12.04 21.83C17.5 21.83 21.95 17.38 21.95 11.92C21.95 9.27 20.92 6.78 19.05 4.91C17.18 3.03 14.69 2 12.04 2M12.05 3.67C14.25 3.67 16.31 4.53 17.87 6.09C19.42 7.65 20.28 9.72 20.28 11.92C20.28 16.46 16.58 20.15 12.04 20.15C10.56 20.15 9.11 19.76 7.85 19L7.55 18.83L4.43 19.65L5.26 16.61L5.06 16.29C4.24 15 3.8 13.47 3.8 11.91C3.81 7.37 7.5 3.67 12.05 3.67M8.53 7.33C8.37 7.33 8.1 7.39 7.87 7.64C7.65 7.89 7 8.5 7 9.71C7 10.93 7.89 12.1 8 12.27C8.14 12.44 9.76 14.94 12.25 16C12.84 16.27 13.3 16.42 13.66 16.53C14.25 16.72 14.79 16.69 15.22 16.63C15.7 16.56 16.68 16.03 16.89 15.45C17.1 14.87 17.1 14.38 17.04 14.27C16.97 14.17 16.81 14.11 16.56 14C16.31 13.86 15.09 13.26 14.87 13.18C14.64 13.1 14.5 13.06 14.31 13.3C14.15 13.55 13.67 14.11 13.53 14.27C13.38 14.44 13.24 14.46 13 14.34C12.74 14.21 11.94 13.95 11 13.11C10.26 12.45 9.77 11.64 9.62 11.39C9.5 11.15 9.61 11 9.73 10.89C9.84 10.78 10 10.6 10.1 10.45C10.23 10.31 10.27 10.2 10.35 10.04C10.43 9.87 10.39 9.73 10.33 9.61C10.27 9.5 9.77 8.26 9.56 7.77C9.36 7.29 9.16 7.35 9 7.34C8.86 7.34 8.7 7.33 8.53 7.33Z"></path></svg>`,
      hotkey: 'ctrl+E',
      section: 'Actions',
      handler: () => {
        if (email && email.length > 0) {
          window.open('https://wa.me/+525575570962', '_blank')
        } else {
          window.open(`mailto:${email}`)
        }
      },
    },
    ...data,
  ])

  document.querySelectorAll('.footer-button').forEach(button => {
    button.addEventListener('click', () => {
      let event = new KeyboardEvent('keydown', {
        key: 'K',
        code: 'KeyK',
        ctrlKey: true,
        altKey: false,
        shiftKey: false,
        metaKey: false,
      })
      document.dispatchEvent(event)
    })
  })
  
  document.querySelectorAll("#hotkeypad li").forEach(li => {
	  li.setAttribute("data-ccursor", "lift");
		li.classList.add("modified-cursor-none");
  });
  document.querySelectorAll("#hotkeypad footer > p").forEach(li => {
	  li.setAttribute("data-ccursor", "");
  });
  document.querySelectorAll("#hotkeypad li > div").forEach(li => {
	  li.setAttribute("data-ccursor", "");
  });
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    .footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    .footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    @apply bg-skin-button-accent;
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }
  kbd {
    @apply bg-skin-muted;
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }
  #hotkeypad {
    --hotkeypad-bg-kbd: rgb(var(--muted));
    --hotkeypad-bg-backdrop: rgb(var(--color-fill));
    --hotkeypad-bg-container: rgb(var(--color-fill));
    --hotkeypad-bg-item-hover: rgba(var(--color-text), 20%);
    --hotkeypad-border-container: rgb(var(--muted));
    --hotkeypad-border-container-hover: rgb(var(--color-fill));
    --hotkeypad-fg-muted: rgb(var(--muted));
    @media (prefers-color-scheme: dark) {
      --hotkeypad-bg-kbd: rgb(var(--muted));
      --hotkeypad-bg-backdrop: rgb(var(--color-fill));
      --hotkeypad-bg-container: rgb(var(--color-fill));
      --hotkeypad-bg-item-hover: rgba(var(--color), 10%);
      --hotkeypad-border-container: rgb(var(--muted));
      --hotkeypad-border-container-hover: rgb(var(--color-fill));
      --hotkeypad-fg-muted: rgb(var(--color-text-base));
    }
  }
</style>
